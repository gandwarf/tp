@startuml

package "logic.parser" {
  interface Parser<T> {
    +T parse(String args) throws ParseException
  }

  class AddressBookParser {
    -Pattern BASIC_COMMAND_FORMAT
    -Logger logger
    +Command parseCommand(String userInput)
  }

  class ArgumentMultimap {
    -Map<Prefix, List<String>> argMultimap
    +void put(Prefix, String)
    +Optional<String> getValue(Prefix)
    +List<String> getAllValues(Prefix)
    +String getPreamble()
    +void verifyNoDuplicatePrefixesFor(Prefix...)
  }

  class ArgumentTokenizer {
    +static ArgumentMultimap tokenize(String argsString, Prefix...)
  }

  class CliSyntax {
    +PREFIX_NAME: Prefix
    +PREFIX_PHONE: Prefix
    +PREFIX_EMAIL: Prefix
    +PREFIX_ADDRESS: Prefix
    +PREFIX_TAG: Prefix
    +PREFIX_PREFERENCE: Prefix
    +PREFIX_FREQUENCY: Prefix
    +PREFIX_PRIORITY: Prefix
  }

  class AddCommandParser {
    +AddCommand parse(String args)
  }

  class EditCommandParser {
    +EditCommand parse(String args)
  }

  class DeleteCommandParser {
    +DeleteCommand parse(String args)
  }

  class DescribeCommandParser {
    +DescribeCommand parse(String args)
  }

  class ExpandCommandParser {
    +ExpandCommand parse(String args)
  }
}


Parser <|.. AddCommandParser
Parser <|.. EditCommandParser
Parser <|.. DeleteCommandParser
Parser <|.. DescribeCommandParser
Parser <|.. ExpandCommandParser

AddCommandParser --> ArgumentMultimap
AddCommandParser --> ArgumentTokenizer
AddCommandParser --> CliSyntax
AddCommandParser --> ParserUtil

EditCommandParser --> ArgumentMultimap
EditCommandParser --> ArgumentTokenizer
EditCommandParser --> CliSyntax
EditCommandParser --> ParserUtil

DeleteCommandParser --> ParserUtil
DescribeCommandParser --> ParserUtil
ExpandCommandParser --> ParserUtil

AddressBookParser --> AddCommandParser
AddressBookParser --> EditCommandParser
AddressBookParser --> DeleteCommandParser
AddressBookParser --> DescribeCommandParser
AddressBookParser --> ExpandCommandParser

@enduml

